#pragma once
#include "SFML/Window.hpp"
#include "SFML/Graphics.hpp"
#include <array>
#pragma once
#include "Cuboid.h"
#include "Tile.h"
#include "Welcome.h"
#include "MainMenu.h"
#include "GameLost.h"
#include "GameWon.h"
#include "GameFinished.h"
#include "PositionOriented_Tile.h"
#include "Button_Tile.h"
#include "POButton_Tile.h"
#include "BControlled_Tile.h"
#include "Regular_Tile.h"
#include "Empty_Tile.h"
#include "Winning_Tile.h"


class Game
{
public:
	enum GameState {
		Uninitialized, Menu, Playing, Lost, Won, Exiting , ShowingWelcome, ShowingMenu, Finished
	};
	 void Start();
	 void ShowMenu();
	 void ShowWelcome();
	 void ShowGameLost();
	 void ShowGameWon();
	 void ShowFinished();
	void setGameState(GameState gs);
	void incrementIndex();
	vector<vector<Tile*>> getTileMap();
	Cuboid cuboid;
	
		Game() : level1Config({ { "0000000000000000000000000000000000000000000000000000000000000000011100000000000000000111111000000000000001111111110000000000001111111110000000000000001121100000000000000001110000000000000000000000000000000000000000000000000000000000000000000604",
		                      "00000000000000000000000000000000000000000000000000000000000000000000011110011100000111100116(0714)10012100000114(0707)10011110011100000111100111100111000001111511111151110000011110011110000000000000000000000000000000000000000000000000000000000000000000407",
							  "0000000000000000000000000000000000000000000003333333000000000000033333330000000000111100000111000000001110000000110000000011100000001100000000111001111333330000001110011113333300000000000121003313000000000001110033330000000000000000000000000305", 
							  "000000000000000000000000000000000111100000011111514(0208)114(0208)1110000001111000000011100000011110000000000000000111100000000000000000016(0908)6(0908)4(0908)1111110000000000000000011114(0908)000001110000000111110000012111151111110000000111100000000000000000000000000000000001502",
			"0000000000000000000000000001111110000000000000010011100000000000000100111110000000111111000001111000000000111000011210000000001110000011100000000000100110000000000000001111100000000000000011111000000000000000011100000000000000000000000000000204",
			"0000000000000000000000000111100000000000000001211000000000000000011100000000000000000100011111100000000001000110011000000000111111100111000000000000010000010000000000000111100100000000000001111111000000000000000011100000000000000000000000000406",
			"000000000000000000000000000000000006(0509)0000000000001110011100000000000016(0315)111115000000000011111001100000000000121500011000000000111110001111000000011110000011110000000111100111110000000000000011100000000000000000111000000000000000000000000000000507",
			"0000000000000000000000011131111311110000000110000000011100000001100000000011100000011100011100111000000111333121001110000001110031110010000000000100333331100000000001113313330000000000001133333300000000000011100110000000000000000000000000001504",
			"000000000000000000000000000000011100000000000011100111000000000115111111111110000001151110000006(0405)1000000100000000000110000001000000000001100000010000000111111000000111110001110000000000112100011100000000000111000111116(03050000000000000000000000000703"
			, "000000000000000000000001111111114(0610)111100000000001100000011000000000011000000110000000000000000001100000000000000000011000001110011151111110000012100110000000000000111001100000000000000110011000000000000001151111114(1005)1110000000000000000000000000301"} }) {}
	
private:
	
	std::array<string,10> level1Config;
	//string level1Config[2] = { "00000000000000000000000000000000000000000011111111111111110000011110111000111100001110000011111100000011111121100001000000111111111111111100001111100000111111000011111111111000000000000000000000000000", "00000000000000000000000000000000000000000011111111111111110000011110111000111100001110000012111100000011111111100001000000111111111111111100001111100000111111000011111111111000000000000000000000000000" };
	vector<vector<Tile*>> vec;
	int index;
	int count = -1;
	 int memory = 0;
	 sf::Font font1;
	 sf::Text moves;
	 sf::Text level;
	 bool IsExiting();
     void GameLoop();
	
	

	static GameState gameState;
	static sf::RenderWindow gameWindow;

	vector<vector<Tile*>> createTileVec(string a);

};
